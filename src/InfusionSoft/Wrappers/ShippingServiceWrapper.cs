//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfusionSoft
{
    using Definition;
    
    
    internal partial class ShippingServiceWrapper : ServiceBase<IShippingServiceDefinition>, IShippingService
    {

        public ShippingServiceWrapper(InfusionSoft.IInfusionSoftConfiguration configuration, IMethodListenerProvider listenerProvider) :
            base(configuration, listenerProvider)
        {
        }
        
        public virtual object GetAllShippingOptions()
        {
            return Invoke(d => d.GetAllShippingOptions(ApiKey));
        }
        
        public virtual object GetFlatRateShippingOption(int optionId)
        {
            return Invoke(d => d.GetFlatRateShippingOption(ApiKey, optionId));
        }
        
        public virtual object GetOrderTotalShippingOption(int optionId)
        {
            return Invoke(d => d.GetOrderTotalShippingOption(ApiKey, optionId));
        }
        
        public virtual object GetOrderTotalShippingRanges(int optionId)
        {
            return Invoke(d => d.GetOrderTotalShippingRanges(ApiKey, optionId));
        }
        
        public virtual object GetProductShippingPricesForProductShippingOption(int id)
        {
            return Invoke(d => d.GetProductShippingPricesForProductShippingOption(ApiKey, id));
        }
        
        public virtual object GetProductBasedShippingOption(int optionId)
        {
            return Invoke(d => d.GetProductBasedShippingOption(ApiKey, optionId));
        }
        
        public virtual object GetOrderQuantityShippingOption(int optionId)
        {
            return Invoke(d => d.GetOrderQuantityShippingOption(ApiKey, optionId));
        }
        
        public virtual object GetWeightBasedShippingOption(int optionId)
        {
            return Invoke(d => d.GetWeightBasedShippingOption(ApiKey, optionId));
        }
        
        public virtual object GetWeightBasedShippingRanges(int id)
        {
            return Invoke(d => d.GetWeightBasedShippingRanges(ApiKey, id));
        }
        
        public virtual object GetUpsShippingOption(int optionId)
        {
            return Invoke(d => d.GetUpsShippingOption(ApiKey, optionId));
        }
    }
}
