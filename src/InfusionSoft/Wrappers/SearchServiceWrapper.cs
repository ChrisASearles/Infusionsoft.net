//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfusionSoft
{
    using Definition;
    
    
    internal partial class SearchServiceWrapper : ServiceBase<ISearchServiceDefinition>, ISearchService
    {
        
        public SearchServiceWrapper(InfusionSoft.IInfusionSoftConfiguration configuration) : 
                base(configuration)
        {
        }
        
        public virtual object GetAllReportColumns(int savedSearchId, int userId)
        {
            return Invoke(d => d.GetAllReportColumns(ApiKey, savedSearchId, userId));
        }
        
        public virtual object GetSavedSearchResultsAllFields(int savedSearchId, int userId, int pageNumber)
        {
            return Invoke(d => d.GetSavedSearchResultsAllFields(ApiKey, savedSearchId, userId, pageNumber));
        }
        
        public virtual object GetAvailableQuickSearches(int userId)
        {
            return Invoke(d => d.GetAvailableQuickSearches(ApiKey, userId));
        }
        
        public virtual object QuickSearch(int quickSearchType, int userId, int searchData, int page, int returnLimit)
        {
            return Invoke(d => d.QuickSearch(ApiKey, quickSearchType, userId, searchData, page, returnLimit));
        }
        
        public virtual object GetDefaultQuickSearch()
        {
            return Invoke(d => d.GetDefaultQuickSearch(ApiKey));
        }
    }
}
