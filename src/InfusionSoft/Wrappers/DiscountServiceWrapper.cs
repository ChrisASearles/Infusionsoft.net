//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfusionSoft
{
    using Definition;
    
    
    internal partial class DiscountServiceWrapper : ServiceBase<IDiscountServiceDefinition>, IDiscountService
    {

        public DiscountServiceWrapper(InfusionSoft.IInfusionSoftConfiguration configuration, IMethodListenerProvider listenerProvider) :
            base(configuration, listenerProvider)
        {
        }
        
        public virtual object AddFreeTrial(string name, string description, int freeTrialDays, int hidePrice, int subscriptionPlanId)
        {
            return Invoke(d => d.AddFreeTrial(ApiKey, name, description, freeTrialDays, hidePrice, subscriptionPlanId));
        }
        
        public virtual object GetFreeTrial(int trialId)
        {
            return Invoke(d => d.GetFreeTrial(ApiKey, trialId));
        }
        
        public virtual object AddOrderTotalDiscount(string name, string description, int applyDiscountToCommission, int percentOrAmt, int amt, string payType)
        {
            return Invoke(d => d.AddOrderTotalDiscount(ApiKey, name, description, applyDiscountToCommission, percentOrAmt, amt, payType));
        }
        
        public virtual object GetOrderTotalDiscount(int id)
        {
            return Invoke(d => d.GetOrderTotalDiscount(ApiKey, id));
        }
        
        public virtual object AddCategoryDiscount(string name, string description, int applyDiscountToCommission, int amt)
        {
            return Invoke(d => d.AddCategoryDiscount(ApiKey, name, description, applyDiscountToCommission, amt));
        }
        
        public virtual object GetCategoryDiscount(int id)
        {
            return Invoke(d => d.GetCategoryDiscount(ApiKey, id));
        }
        
        public virtual object AddCategoryAssignmentToCategoryDiscount(int id, int productId)
        {
            return Invoke(d => d.AddCategoryAssignmentToCategoryDiscount(ApiKey, id, productId));
        }
        
        public virtual object GetCategoryAssignmentsForCategoryDiscount(int id)
        {
            return Invoke(d => d.GetCategoryAssignmentsForCategoryDiscount(ApiKey, id));
        }
        
        public virtual object AddProductTotalDiscount(string name, string description, int applyDiscountToCommission, int productId, int percentOrAmt, int amt)
        {
            return Invoke(d => d.AddProductTotalDiscount(ApiKey, name, description, applyDiscountToCommission, productId, percentOrAmt, amt));
        }
        
        public virtual object GetProductTotalDiscount(string id)
        {
            return Invoke(d => d.GetProductTotalDiscount(ApiKey, id));
        }
        
        public virtual object AddShippingTotalDiscount(string name, string description, int applyDiscountToCommission, int percentOrAmt, int amt)
        {
            return Invoke(d => d.AddShippingTotalDiscount(ApiKey, name, description, applyDiscountToCommission, percentOrAmt, amt));
        }
        
        public virtual object GetShippingTotalDiscount(int id)
        {
            return Invoke(d => d.GetShippingTotalDiscount(ApiKey, id));
        }
    }
}
